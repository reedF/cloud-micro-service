<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.reed.micro.service</groupId>
	<artifactId>cloud-micro-service</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>cloud-micro-service</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.7</java.version>
		<spring.version>4.2.5.RELEASE</spring.version>
		<spring.sleuth.version>1.0.0.RC1</spring.sleuth.version>
	</properties>

	<parent>
		<groupId>org.springframework.cloud</groupId>
		<artifactId>spring-cloud-starter-parent</artifactId>
		<version>Angel.SR6</version>
	</parent>

	<modules>
		<module>micro-base</module>
		<module>micro-service</module>
		<module>micro-rest-client</module>
		<module>micro-dashboard</module>
		<module>micro-server</module>
		<module>micro-base-cloud</module>
		<!-- <module>micro-gateway</module> <module>micro-eureka-server</module> -->
	</modules>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-eureka</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<version>1.3.3.RELEASE</version>
		</dependency>
		<!-- test -->
		<dependency>
			<groupId>org.springframework.hateoas</groupId>
			<artifactId>spring-hateoas</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<version>1.3.2.RELEASE</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- zipkin ,spring-cloud-starter-zipkin同时包括了spring-cloud-starter-sleuth和spring-cloud-sleuth-zipkin -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-zipkin</artifactId>
			<version>${spring.sleuth.version}</version>
		</dependency>
		<!-- <dependency> <groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-starter-sleuth</artifactId> 
			<version>${spring.sleuth.version}</version> </dependency> <dependency> <groupId>org.springframework.cloud</groupId> 
			<artifactId>spring-cloud-sleuth-zipkin</artifactId> <version>${spring.sleuth.version}</version> 
			</dependency> -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-commons</artifactId>
			<version>1.1.0.RC2</version>
		</dependency>
	</dependencies>


	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<fork>true</fork>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<formats>
						<format>html</format>
						<format>xml</format>
					</formats>
					<check />
				</configuration>
			</plugin>
		</plugins>
	</build>

	<repositories>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>http://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot</artifactId>
				<version>1.3.3.RELEASE</version>
			</dependency>
			<!-- fix bug for: can not find fallbackmethod when adding Throwable to 
				fallbackmethod -->
			<dependency>
				<groupId>com.netflix.hystrix</groupId>
				<artifactId>hystrix-javanica</artifactId>
				<version>1.4.20</version>
			</dependency>
			<!-- zipkin -->
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-sleuth</artifactId>
				<version>${spring.sleuth.version}</version>
			</dependency>
			<!-- zipkin stream -->
			<dependency>
				<groupId>org.springframework.integration</groupId>
				<artifactId>spring-integration-amqp</artifactId>
				<version>4.2.5.RELEASE</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.integration</groupId>
				<artifactId>spring-integration-core</artifactId>
				<version>4.2.5.RELEASE</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.amqp</groupId>
				<artifactId>spring-rabbit</artifactId>
				<version>1.5.4.RELEASE</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.amqp</groupId>
				<artifactId>spring-amqp</artifactId>
				<version>1.5.4.RELEASE</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<description>1.强制使用spring-4.2.5版本，修正Angel.SR6对老版依赖的兼容问题
2.强制使用hystrix-javanica-1.4.20版，修正hystrix bug：当添加Throwable参数到fallbackmethod以获取异常信息时，@HystrixCommand找不到该方法的bug,参见：https://github.com/Netflix/Hystrix/issues/1015
3.引入spring-cloud-starter-zipkin依赖，实现跟踪链，spring-cloud-starter-zipkin会同时引入spring-cloud-starter-sleuth和spring-cloud-sleuth-zipkin，无需单配二者的依赖,但同时引入二者时，不可再引入spring-cloud-sleuth-stream使用stream传送trace data，否则会有冲突导致org.springframework.cloud.sleuth.stream.HostLocator无法加载，故spring-cloud-sleuth-stream和spring-cloud-sleuth-zipkin只可使用其一</description>
</project>